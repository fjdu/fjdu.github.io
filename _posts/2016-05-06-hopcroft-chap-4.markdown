---
layout: post
title:  "Hopcroft: Foundations of Data Science, Chapter 4, 奇异值分解"
date:   2016-05-06 Fri 04:10:18
categories: data science
---

<h1>Singular Value Decomposition: SVD, 奇异值分解</h1>

<p>
\(
\newcommand\trsps{\mathsf{T}}
\newcommand\V[1]{\mathbf{#1}}
\newcommand\argmax{\mathrm{arg\,max}}
\)
</p>

<p>
矩阵 \(A\) 的奇异值分解指的是把 \(A\) 分解为三个矩阵的乘积，\(A = UDV^\trsps\)，使得 \(U\) 和 \(V\) 的列向量都是正交的，而  \(D\) 是对角矩阵且对角元素为正实数。
</p>

<p>
实践中常常出现 \(A\) 很接近于一个低秩矩阵的情形 (对于方阵来说这意味着近乎不可逆)，此时为 \(A\) 找一个低秩近似就很有用。事实上，对于任意 \(k\)，\(A\) 的奇异值分解给出对 \(A\) 的最佳 \(k\)-秩近似。
</p>

<p>
常见本征值分解只能用于方阵，并且要求这方阵满足一些条件以保证本征矢量的正交性，而奇异值分解可用于任何矩阵。事实上，奇异值分解给出的矩阵 \(V\) 的列总是组成一个正交集合，而对 \(A\) 无任何要求。\(V\) 的列矢量称为 \(A\) 的右奇异矢量。同样，\(U\) 的列称为 \(A\) 的左奇异矢量并且组成正交集合。如果 \(A\) 是可逆方阵，其逆是 \(VD^{-1}U^\trsps\)。
</p>

<p>
设 \(A\) 是个 \(n\) 行 \(d\) 列矩阵 (\(n\times d\))。把它想象为 \(d\) 维空间的 \(n\) 个点，然后我们需要找到能“最好地”代表这些点的 \(k\) 维子空间。这里“最好”的意思是，要让所有点到这个子空间的垂直距离的平方和最小。我们从子空间是一维的情况开始，也就是一根穿过坐标原点的直线。之后我们将会看到，最佳拟合的 \(k\) 维子空间可以通过 \(k\) 次使用最佳直线拟合算法得到。这个问题被称为最佳最小二乘拟合。
</p>

<p>
考虑一个点 \(\V{a}_i = (a_{i1}, a_{i2}, \ldots, a_{id})\)。把它投影到一条穿过原点的直线时，下面的等式成立
\begin{equation}
    a_{i1}^2 + a_{i2}^2 + \cdots + a_{id}^2 = (\text{点在线上的投影长度})^2 + (\text{点到线的距离})^2.
\end{equation}
考虑到左边的数都是给定的，于是，最小化所有点到线的距离平方和的问题，等价于最大化所有点在线上的投影长度平方和。在一般的最佳拟合子空间问题里也是这样。
</p>

<p>
关于“最佳拟合”，也不是非要通过最小化距离平方和来定义。比如也可以通过最小化距离的和来定义。但是前者的好处是平方比绝对值常常有更方便的数学性质，比如上面把最小化距离平方和转变成最大化投影长度平方和就是一个例子。
</p>

<h2>奇异矢量</h2>
<p>
现在定义 \(n\times d\) 矩阵 \(A\) 的奇异矢量。像前面说的那样，把 \(A\) 的行设想为 \(d\) 维空间的 \(n\) 个点，然后考虑用经过原点的直线来做最佳拟合。令 \(\V{v}\) 是沿着这条直线的单位矢量，那么 \(A\) 的第 \(i\) 行，\(\V{a}_i\) 在 \(\V{v}\) 方向上的投影是 \(|\V{a}_i\cdot\V{v}|\)。于是可以看出，投影长度的平方和是 \(|A\V{v}|^2\)，而最佳拟合直线让它最大。
</p>

<p>
现在来定义 \(A\) 的第一奇异矢量 \(\V{v}_1\)。它是个单位列向量，使得 \(A\) 的所有行向量在它的方向上投影长度平方和最大，也就是
\begin{equation}
    \V{v}_1 = \argmax_{|\V{v}|=1} |A\V{v}|.
\end{equation}
技术上讲，\(\argmax\) 给出的结果不一定唯一，这种情况下我们随便选出一个作为第一奇异矢量就好了。
</p>

<p>
定义 \(A\) 的第一奇异值为 \(\sigma_1(A) = |A\V{v}_1|\)。注意到
\[\sigma_1^2 = \sum_{i=1}^n(\V{a}_i\cdot\V{v})^2,\]
也就是所有点在第一奇异矢量方向上投影的平方和。
</p>

<p>
现在考虑寻求 \(A\) 的最佳 2 维子空间拟合。一种贪婪算法是，采用 \(\V{v}_1\) 作为这个子空间的第一个基矢量，然后需要找到第二个基矢量。关于最佳拟合的定义中的距离平方和有助于下面的推演。对于每个包含 \(\V{v}_1\) 的 2 维子空间，矩阵 \(A\) 往这个子空间的投影距离的平方和
</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>
